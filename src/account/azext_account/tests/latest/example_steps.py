# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /BillingAccount/get/GetBillingAccountPolicy
@try_manual
def step_billing_account_show_policy(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account billing-account show-policy '
             '--billing-account-id "testBillingAccountId"',
             checks=checks)


# EXAMPLE: /Subscriptions/put/CreateAlias
@try_manual
def step_subscription_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription create '
             '--alias-name "aliasForNewSub" '
             '--management-group-id "testManagementGroupId" '
             '--subscription-owner-id "testOwnerId" '
             '--subscription-tenant-id "testTenantId" '
             '--tags tag1="testTag" '
             '--billing-scope "/providers/Microsoft.Billing/billingAccounts/e879cf0f-2b4d-5431-109a-f72fc9868693:024cab'
             'f4-7321-4cf9-be59-df0c77ca51de_2019-05-31/billingProfiles/PE2Q-NOIT-BG7-TGB/invoiceSections/MTT4-OBS7-PJA'
             '-TGB" '
             '--display-name "Contoso MCA subscription" '
             '--reseller-id "testResellerId" '
             '--subscription-id "testSubGUID" '
             '--workload "Production"',
             checks=checks)


# EXAMPLE: /Subscriptions/get/getSubscription
@try_manual
def step_subscription_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription show '
             '--subscription-id "83aa47df-e3e9-49ff-877b-94304bf3d3ad"',
             checks=checks)


# EXAMPLE: /Subscriptions/get/ListAlias
@try_manual
def step_subscription_list_alias(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription list-alias',
             checks=checks)


# EXAMPLE: /Subscriptions/get/listLocations
@try_manual
def step_subscription_list_location(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription list-location '
             '--subscription-id "83aa47df-e3e9-49ff-877b-94304bf3d3ad"',
             checks=checks)


# EXAMPLE: /Subscriptions/get/listSubscriptions
@try_manual
def step_subscription_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription list',
             checks=checks)


# EXAMPLE: /Subscriptions/post/createCspSubscription
@try_manual
def step_subscription_create_csp_subscription(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription create-csp-subscription '
             '--billing-account-name "{myBillingAccount}" '
             '--display-name "Contoso MCA subscription" '
             '--sku-id "0001" '
             '--customer-name "e33ba30d-3718-4b15-bfaa-5627a57cda6f"',
             checks=checks)


# EXAMPLE: /Subscriptions/post/createLegacySubscription
@try_manual
def step_subscription_create_subscription(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription create-subscription-in-enrollment-account '
             '--additional-parameters "{{\\"customData\\":{{\\"key1\\":\\"value1\\",\\"key2\\":true}}}}" '
             '--display-name "Test Ea Azure Sub" '
             '--offer-type "MS-AZR-0017P" '
             '--owners object-id="973034ff-acb7-409c-b731-e789672c7b31" '
             '--owners object-id="67439a9e-8519-4016-a630-f5f805eba567" '
             '--enrollment-account-name "73f8ab6e-cfa0-42be-b886-be6e77c2980c"',
             checks=checks)


# EXAMPLE: /Subscriptions/post/createSubscription
@try_manual
def step_subscription_create_subscription2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription create-subscription '
             '--billing-account-name "{myBillingAccount2}" '
             '--billing-profile-name "27VR-HDWX-BG7-TGB" '
             '--additional-parameters "{{\\"customData\\":{{\\"key1\\":\\"value1\\",\\"key2\\":true}}}}" '
             '--cost-center "135366376" '
             '--display-name "Contoso MCA subscription" '
             '--object-id "973034ff-acb7-409c-b731-e789672c7b32" '
             '--sku-id "0001" '
             '--invoice-section-name "JGF7-NSBG-PJA-TGB"',
             checks=checks)


# EXAMPLE: /Subscriptions/post/RedeemSubscription
@try_manual
def step_subscription_redeem(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription redeem '
             '--management-group-id "testManagementGroupId" '
             '--tags tag1="testTag" '
             '--subscription-id "291bba3f-e0a5-47bc-a099-3bdcb2a50a05"',
             checks=checks)


# EXAMPLE: /Subscription/post/cancelSubscription
@try_manual
def step_subscription_cancel(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription cancel '
             '--subscription-id "83aa47df-e3e9-49ff-877b-94304bf3d3ad"',
             checks=checks)


# EXAMPLE: /Subscription/post/enableSubscription
@try_manual
def step_subscription_enable(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription enable '
             '--subscription-id "7948bcee-488c-47ce-941c-38e20ede803d"',
             checks=checks)


# EXAMPLE: /Subscription/post/renameSubscription
@try_manual
def step_subscription_rename(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription rename '
             '--name "{mySubscription}" '
             '--subscription-id "83aa47df-e3e9-49ff-877b-94304bf3d3ad"',
             checks=checks)


# EXAMPLE: /SubscriptionOperation/get/getPendingSubscriptionOperations
@try_manual
def step_subscription_operation_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription-operation show '
             '--operation-id "e4b8d068-f574-462a-a76f-6fa0afc613c9"',
             checks=checks)


# EXAMPLE: /SubscriptionPolicy/put/TenantPolicy
@try_manual
def step_subscription_policy_add(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription-policy add-update-policy-for-tenant '
             '--block-subscriptions-into-tenant true '
             '--block-subscriptions-leaving-tenant true '
             '--exempted-principals "e879cf0f-2b4d-5431-109a-f72fc9868693" "9792da87-c97b-410d-a97d-27021ba09ce6"',
             checks=checks)


# EXAMPLE: /SubscriptionPolicy/get/getTenantPolicy
@try_manual
def step_subscription_policy_show_policy_for_tenant(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription-policy show-policy-for-tenant',
             checks=checks)


# EXAMPLE: /SubscriptionPolicy/get/getTenantPolicyList
@try_manual
def step_subscription_policy_list_policy_for_tenant(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription-policy list-policy-for-tenant',
             checks=checks)


# EXAMPLE: /Subscriptions/get/GetAlias
@try_manual
def step_subscription_show_alias(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription show-alias '
             '--alias-name "aliasForNewSub"',
             checks=checks)


# EXAMPLE: /Subscriptions/delete/DeleteAlias
@try_manual
def step_subscription_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account subscription delete -y '
             '--alias-name "aliasForNewSub"',
             checks=checks)


# EXAMPLE: /Tenants/get/listTenants
@try_manual
def step_tenant_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az account tenant list',
             checks=checks)

