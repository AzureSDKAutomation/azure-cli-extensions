# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import (
    tags_type,
    get_enum_type
)


def load_arguments(self, _):

    with self.argument_context('account subscription show') as c:
        c.argument('subscription_id', type=str, help='The ID of the target subscription.', id_part='subscription')

    with self.argument_context('account subscription list-location') as c:
        c.argument('subscription_id', type=str, help='The ID of the target subscription.')

    with self.argument_context('account subscription create') as c:
        c.argument('alias_name', type=str, help='Alias Name')
        c.argument('display_name', type=str, help='The friendly name of the subscription.')
        c.argument('workload', arg_type=get_enum_type(['Production', 'DevTest']), help='The workload type of the '
                   'subscription. It can be either Production or DevTest.')
        c.argument('billing_scope', type=str, help='Determines whether subscription is fieldLed, partnerLed or '
                   'LegacyEA')
        c.argument('subscription_id', type=str, help='This parameter can be used to create alias for existing '
                   'subscription Id')
        c.argument('reseller_id', type=str, help='Reseller Id')
        c.argument('management_group_id', type=str, help='Management group Id for the subscription.',
                   arg_group='Additional Properties')
        c.argument('subscription_tenant_id', type=str, help='Tenant Id of the subscription', arg_group='Additional '
                   'Properties')
        c.argument('subscription_owner_id', type=str, help='Owner Id of the subscription', arg_group='Additional '
                   'Properties')
        c.argument('tags', tags_type)

    with self.argument_context('account subscription redeem') as c:
        c.argument('subscription_id', type=str, help='Subscription Id.', id_part='subscription')
        c.argument('management_group_id', type=str, help='Management group Id for the subscription.')
        c.argument('tags', tags_type)

    with self.argument_context('account billing-account show-policy') as c:
        c.argument('billing_account_id', type=str, help='Billing Account Id.')
