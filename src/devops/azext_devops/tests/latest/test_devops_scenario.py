# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_pipeline_create
from .example_steps import step_pipeline_show
from .example_steps import step_pipeline_list
from .example_steps import step_pipeline_list2
from .example_steps import step_pipeline_update
from .example_steps import step_pipeline_delete
from .example_steps import step_pipeline_template_definition_list
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg):
    setup_scenario(test, rg)
    step_pipeline_create(test, rg, checks=[
        test.check("location", "South India", case_sensitive=False),
        test.check("name", "{myPipeline}", case_sensitive=False),
    ])
    step_pipeline_show(test, rg, checks=[
        test.check("location", "South India", case_sensitive=False),
        test.check("name", "{myPipeline}", case_sensitive=False),
    ])
    step_pipeline_list(test, rg, checks=[
        test.check('length(@)', 1),
    ])
    step_pipeline_list2(test, rg, checks=[
        test.check('length(@)', 1),
    ])
    step_pipeline_update(test, rg, checks=[
        test.check("location", "South India", case_sensitive=False),
        test.check("name", "{myPipeline}", case_sensitive=False),
        test.check("name", "{myPipeline}", case_sensitive=False),
        test.check("tags.tagKey", "tagvalue", case_sensitive=False),
    ])
    step_pipeline_delete(test, rg, checks=[])
    step_pipeline_template_definition_list(test, rg, checks=[])
    cleanup_scenario(test, rg)


# Test class for Scenario
@try_manual
class DevopsScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(DevopsScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'myPipeline': 'myAspNetWebAppPipeline',
        })


    @ResourceGroupPreparer(name_prefix='clitestdevops_myAspNetWebAppPipeline-rg'[:7], key='rg', parameter_name='rg')
    def test_devops_Scenario(self, rg):
        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()

