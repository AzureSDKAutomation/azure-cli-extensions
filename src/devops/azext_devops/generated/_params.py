# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import (
    tags_type,
    get_enum_type,
    resource_group_name_type,
    get_location_type
)
from azure.cli.core.commands.validators import get_default_location_from_resource_group
from azext_devops.action import (
    AddParameters,
    AddProperties,
    AddAuthorizationParameters
)


def load_arguments(self, _):

    with self.argument_context('devops pipeline list') as c:
        c.argument('resource_group_name', resource_group_name_type)

    with self.argument_context('devops pipeline show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('pipeline_name', options_list=['--name', '-n', '--pipeline-name'], type=str, help='The name of the '
                   'Azure Pipeline resource in ARM.', id_part='name')

    with self.argument_context('devops pipeline create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('pipeline_name', type=str, help='The name of the Azure Pipeline resource in ARM.')
        c.argument('tags', tags_type)
        c.argument('location', arg_type=get_location_type(self.cli_ctx), required=False,
                   validator=get_default_location_from_resource_group)
        c.argument('id_', options_list=['--id'], type=str, help='Unique identifier of the pipeline template.',
                   arg_group='Bootstrap Configuration Template')
        c.argument('parameters', action=AddParameters, nargs='+', help='Dictionary of input parameters used in the '
                   'pipeline template. Expect value: KEY1=VALUE1 KEY2=VALUE2 ...', arg_group='Bootstrap Configuration '
                   'Template')
        c.argument('repository_type', arg_type=get_enum_type(['gitHub', 'vstsGit']), help='Type of code repository.',
                   arg_group='Bootstrap Configuration Repository')
        c.argument('code_repository_id', type=str, help='Unique immutable identifier of the code repository.',
                   arg_group='Bootstrap Configuration Repository')
        c.argument('default_branch', type=str, help='Default branch used to configure Continuous Integration (CI) in '
                   'the pipeline.', arg_group='Bootstrap Configuration Repository')
        c.argument('properties', action=AddProperties, nargs='+', help='Repository-specific properties. Expect value: '
                   'KEY1=VALUE1 KEY2=VALUE2 ...', arg_group='Bootstrap Configuration Repository')
        c.argument('authorization_parameters', action=AddAuthorizationParameters, nargs='+', help='Authorization '
                   'parameters corresponding to the authorization type. Expect value: KEY1=VALUE1 KEY2=VALUE2 ...',
                   arg_group='Bootstrap Configuration Repository Authorization')
        c.argument('name', type=str, help='Name of the Azure DevOps Project.', arg_group='Project')
        c.argument('organization_reference_name', type=str, help='Name of the Azure DevOps Organization.',
                   arg_group='Organization')

    with self.argument_context('devops pipeline update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('pipeline_name', options_list=['--name', '-n', '--pipeline-name'], type=str, help='The name of the '
                   'Azure Pipeline resource.', id_part='name')
        c.argument('tags', tags_type)

    with self.argument_context('devops pipeline delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('pipeline_name', options_list=['--name', '-n', '--pipeline-name'], type=str, help='The name of the '
                   'Azure Pipeline resource.', id_part='name')

    with self.argument_context('devops pipeline wait') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('pipeline_name', options_list=['--name', '-n', '--pipeline-name'], type=str, help='The name of the '
                   'Azure Pipeline resource in ARM.', id_part='name')
