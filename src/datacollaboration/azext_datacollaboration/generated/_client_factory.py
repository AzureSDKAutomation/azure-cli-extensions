# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


def cf_datacollaboration_cl(cli_ctx, *_):
    from azure.cli.core.commands.client_factory import get_mgmt_service_client
    from ..vendored_sdks.datacollaboration import DataCollaborationManagementClient
    return get_mgmt_service_client(cli_ctx,
                                   DataCollaborationManagementClient)


def cf_consumer_invitation(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).consumer_invitation


def cf_workspace(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).workspace


def cf_data_asset(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).data_asset


def cf_data_set(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).data_set


def cf_pipeline_run(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).pipeline_run


def cf_pipeline_step_run(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).pipeline_step_run


def cf_pipeline(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).pipeline


def cf_pipeline_step(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).pipeline_step


def cf_proposal(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).proposal


def cf_data_asset_reference(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).data_asset_reference


def cf_entitlement(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).entitlement


def cf_constraint(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).constraint


def cf_policy(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).policy


def cf_invitation(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).invitation


def cf_participant(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).participant


def cf_script_reference(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).script_reference


def cf_resource_reference(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).resource_reference


def cf_script(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).script


def cf_script_revision(cli_ctx, *_):
    return cf_datacollaboration_cl(cli_ctx).script_revision
