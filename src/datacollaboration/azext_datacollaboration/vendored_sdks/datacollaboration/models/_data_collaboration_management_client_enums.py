# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class ContractStatus(str, Enum):
    """Indicate if the contract is an editable Draft or a readonly Active contract
    """

    draft = "Draft"
    active = "Active"

class CreatedByType(str, Enum):
    """The type of identity that created the resource.
    """

    user = "User"
    application = "Application"
    managed_identity = "ManagedIdentity"
    key = "Key"

class DataProcessingStrategy(str, Enum):
    """Data processing strategy to use for the the child DataSets
    """

    copy_based = "CopyBased"
    in_place = "InPlace"

class Enum7(str, Enum):

    production = "Production"
    sample = "Sample"

class Enum8(str, Enum):

    production = "Production"
    sample = "Sample"

class Enum9(str, Enum):

    production = "Production"
    sample = "Sample"

class InvitationStatus(str, Enum):
    """The status of the invitation.
    """

    pending = "Pending"
    rejected = "Rejected"
    accepted = "Accepted"

class Kind(str, Enum):
    """Kind of constraint.
    """

    script = "Script"
    location = "Location"
    blob = "Blob"
    container = "Container"
    blob_folder = "BlobFolder"
    adls_gen2_file_system = "AdlsGen2FileSystem"
    adls_gen2_folder = "AdlsGen2Folder"
    adls_gen2_file = "AdlsGen2File"
    synapse_spark = "SynapseSpark"
    diagnostic_level = "DiagnosticLevel"

class LastModifiedByType(str, Enum):
    """The type of identity that last modified the resource.
    """

    user = "User"
    application = "Application"
    managed_identity = "ManagedIdentity"
    key = "Key"

class LogLevel(str, Enum):
    """The policy log level.
    """

    verbose = "Verbose"
    information = "Information"
    warning = "Warning"
    error = "Error"
    critical = "Critical"

class PipelineRunStatus(str, Enum):
    """Pipeline run status
    """

    succeeded = "Succeeded"
    failed = "Failed"
    in_progress = "InProgress"
    queued = "Queued"
    cancelled = "Cancelled"
    canceling = "Canceling"

class PipelineStepRunStatus(str, Enum):
    """Pipeline step run status
    """

    succeeded = "Succeeded"
    failed = "Failed"
    in_progress = "InProgress"
    queued = "Queued"
    cancelled = "Cancelled"
    canceling = "Canceling"

class ProposalApprovalStatus(str, Enum):
    """Current approval status
    """

    pending = "Pending"
    approved = "Approved"
    expired = "Expired"

class ProvisioningState(str, Enum):
    """Provisioning state of the DataAsset
    """

    succeeded = "Succeeded"
    creating = "Creating"
    updating = "Updating"
    deleting = "Deleting"
    moving = "Moving"
    failed = "Failed"

class ResourceType(str, Enum):
    """The type of resourced used by the entitlement.
    """

    data_asset_reference = "DataAssetReference"
    script_reference = "ScriptReference"

class ScriptVisibility(str, Enum):
    """The referenced script visibility modifier.
    """

    show_all = "ShowAll"
    hidden_content = "HiddenContent"

class Status(str, Enum):
    """Operation state of the long running operation.
    """

    accepted = "Accepted"
    in_progress = "InProgress"
    transient_failure = "TransientFailure"
    succeeded = "Succeeded"
    failed = "Failed"
    canceled = "Canceled"

class Visibility(str, Enum):
    """Script visibility mode
    """

    show_all = "ShowAll"
    hidden_content = "HiddenContent"
