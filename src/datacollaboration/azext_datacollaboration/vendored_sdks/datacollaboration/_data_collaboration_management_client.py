# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import DataCollaborationManagementClientConfiguration
from .operations import ConsumerInvitationOperations
from .operations import OperationOperations
from .operations import WorkspaceOperations
from .operations import DataAssetOperations
from .operations import DataSetOperations
from .operations import PipelineOperations
from .operations import PipelineRunOperations
from .operations import PipelineStepRunOperations
from .operations import PipelineStepOperations
from .operations import ProposalOperations
from .operations import DataAssetReferenceOperations
from .operations import EntitlementOperations
from .operations import ConstraintOperations
from .operations import PolicyOperations
from .operations import InvitationOperations
from .operations import ParticipantOperations
from .operations import ScriptReferenceOperations
from .operations import ScriptOperations
from .operations import ScriptRevisionOperations
from . import models


class DataCollaborationManagementClient(object):
    """Creates a Microsoft.DataCollaboration management client.

    :ivar consumer_invitation: ConsumerInvitationOperations operations
    :vartype consumer_invitation: data_collaboration_management_client.operations.ConsumerInvitationOperations
    :ivar operation: OperationOperations operations
    :vartype operation: data_collaboration_management_client.operations.OperationOperations
    :ivar workspace: WorkspaceOperations operations
    :vartype workspace: data_collaboration_management_client.operations.WorkspaceOperations
    :ivar data_asset: DataAssetOperations operations
    :vartype data_asset: data_collaboration_management_client.operations.DataAssetOperations
    :ivar data_set: DataSetOperations operations
    :vartype data_set: data_collaboration_management_client.operations.DataSetOperations
    :ivar pipeline: PipelineOperations operations
    :vartype pipeline: data_collaboration_management_client.operations.PipelineOperations
    :ivar pipeline_run: PipelineRunOperations operations
    :vartype pipeline_run: data_collaboration_management_client.operations.PipelineRunOperations
    :ivar pipeline_step_run: PipelineStepRunOperations operations
    :vartype pipeline_step_run: data_collaboration_management_client.operations.PipelineStepRunOperations
    :ivar pipeline_step: PipelineStepOperations operations
    :vartype pipeline_step: data_collaboration_management_client.operations.PipelineStepOperations
    :ivar proposal: ProposalOperations operations
    :vartype proposal: data_collaboration_management_client.operations.ProposalOperations
    :ivar data_asset_reference: DataAssetReferenceOperations operations
    :vartype data_asset_reference: data_collaboration_management_client.operations.DataAssetReferenceOperations
    :ivar entitlement: EntitlementOperations operations
    :vartype entitlement: data_collaboration_management_client.operations.EntitlementOperations
    :ivar constraint: ConstraintOperations operations
    :vartype constraint: data_collaboration_management_client.operations.ConstraintOperations
    :ivar policy: PolicyOperations operations
    :vartype policy: data_collaboration_management_client.operations.PolicyOperations
    :ivar invitation: InvitationOperations operations
    :vartype invitation: data_collaboration_management_client.operations.InvitationOperations
    :ivar participant: ParticipantOperations operations
    :vartype participant: data_collaboration_management_client.operations.ParticipantOperations
    :ivar script_reference: ScriptReferenceOperations operations
    :vartype script_reference: data_collaboration_management_client.operations.ScriptReferenceOperations
    :ivar script: ScriptOperations operations
    :vartype script: data_collaboration_management_client.operations.ScriptOperations
    :ivar script_revision: ScriptRevisionOperations operations
    :vartype script_revision: data_collaboration_management_client.operations.ScriptRevisionOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The subscription identifier.
    :type subscription_id: str
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        subscription_id,  # type: str
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = DataCollaborationManagementClientConfiguration(credential, subscription_id, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.consumer_invitation = ConsumerInvitationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operation = OperationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.workspace = WorkspaceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.data_asset = DataAssetOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.data_set = DataSetOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipeline = PipelineOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_run = PipelineRunOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_step_run = PipelineStepRunOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_step = PipelineStepOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.proposal = ProposalOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.data_asset_reference = DataAssetReferenceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.entitlement = EntitlementOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.constraint = ConstraintOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policy = PolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.invitation = InvitationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.participant = ParticipantOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.script_reference = ScriptReferenceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.script = ScriptOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.script_revision = ScriptRevisionOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> DataCollaborationManagementClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
