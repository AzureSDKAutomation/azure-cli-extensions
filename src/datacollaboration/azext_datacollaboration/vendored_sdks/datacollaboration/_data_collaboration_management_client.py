# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import DataCollaborationManagementClientConfiguration
from .operations import ConsumerInvitationsOperations
from .operations import Operations
from .operations import WorkspacesOperations
from .operations import ConstrainedResourcesOperations
from .operations import DataAssetsOperations
from .operations import DataSetsOperations
from .operations import PipelineRunsOperations
from .operations import PipelineStepRunsOperations
from .operations import PipelinesOperations
from .operations import PipelineStepsOperations
from .operations import ProposalsOperations
from .operations import DataAssetReferencesOperations
from .operations import EntitlementsOperations
from .operations import ConstraintsOperations
from .operations import PoliciesOperations
from .operations import InvitationsOperations
from .operations import ParticipantsOperations
from .operations import ScriptReferencesOperations
from .operations import ResourceReferencesOperations
from .operations import ScriptsOperations
from .operations import ScriptRevisionsOperations
from . import models


class DataCollaborationManagementClient(object):
    """Creates a Microsoft.DataCollaboration management client.

    :ivar consumer_invitations: ConsumerInvitationsOperations operations
    :vartype consumer_invitations: data_collaboration_management_client.operations.ConsumerInvitationsOperations
    :ivar operations: Operations operations
    :vartype operations: data_collaboration_management_client.operations.Operations
    :ivar workspaces: WorkspacesOperations operations
    :vartype workspaces: data_collaboration_management_client.operations.WorkspacesOperations
    :ivar constrained_resources: ConstrainedResourcesOperations operations
    :vartype constrained_resources: data_collaboration_management_client.operations.ConstrainedResourcesOperations
    :ivar data_assets: DataAssetsOperations operations
    :vartype data_assets: data_collaboration_management_client.operations.DataAssetsOperations
    :ivar data_sets: DataSetsOperations operations
    :vartype data_sets: data_collaboration_management_client.operations.DataSetsOperations
    :ivar pipeline_runs: PipelineRunsOperations operations
    :vartype pipeline_runs: data_collaboration_management_client.operations.PipelineRunsOperations
    :ivar pipeline_step_runs: PipelineStepRunsOperations operations
    :vartype pipeline_step_runs: data_collaboration_management_client.operations.PipelineStepRunsOperations
    :ivar pipelines: PipelinesOperations operations
    :vartype pipelines: data_collaboration_management_client.operations.PipelinesOperations
    :ivar pipeline_steps: PipelineStepsOperations operations
    :vartype pipeline_steps: data_collaboration_management_client.operations.PipelineStepsOperations
    :ivar proposals: ProposalsOperations operations
    :vartype proposals: data_collaboration_management_client.operations.ProposalsOperations
    :ivar data_asset_references: DataAssetReferencesOperations operations
    :vartype data_asset_references: data_collaboration_management_client.operations.DataAssetReferencesOperations
    :ivar entitlements: EntitlementsOperations operations
    :vartype entitlements: data_collaboration_management_client.operations.EntitlementsOperations
    :ivar constraints: ConstraintsOperations operations
    :vartype constraints: data_collaboration_management_client.operations.ConstraintsOperations
    :ivar policies: PoliciesOperations operations
    :vartype policies: data_collaboration_management_client.operations.PoliciesOperations
    :ivar invitations: InvitationsOperations operations
    :vartype invitations: data_collaboration_management_client.operations.InvitationsOperations
    :ivar participants: ParticipantsOperations operations
    :vartype participants: data_collaboration_management_client.operations.ParticipantsOperations
    :ivar script_references: ScriptReferencesOperations operations
    :vartype script_references: data_collaboration_management_client.operations.ScriptReferencesOperations
    :ivar resource_references: ResourceReferencesOperations operations
    :vartype resource_references: data_collaboration_management_client.operations.ResourceReferencesOperations
    :ivar scripts: ScriptsOperations operations
    :vartype scripts: data_collaboration_management_client.operations.ScriptsOperations
    :ivar script_revisions: ScriptRevisionsOperations operations
    :vartype script_revisions: data_collaboration_management_client.operations.ScriptRevisionsOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The subscription identifier.
    :type subscription_id: str
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        subscription_id,  # type: str
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = DataCollaborationManagementClientConfiguration(credential, subscription_id, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.consumer_invitations = ConsumerInvitationsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operations = Operations(
            self._client, self._config, self._serialize, self._deserialize)
        self.workspaces = WorkspacesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.constrained_resources = ConstrainedResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.data_assets = DataAssetsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.data_sets = DataSetsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_runs = PipelineRunsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_step_runs = PipelineStepRunsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipelines = PipelinesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_steps = PipelineStepsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.proposals = ProposalsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.data_asset_references = DataAssetReferencesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.entitlements = EntitlementsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.constraints = ConstraintsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policies = PoliciesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.invitations = InvitationsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.participants = ParticipantsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.script_references = ScriptReferencesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.resource_references = ResourceReferencesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.scripts = ScriptsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.script_revisions = ScriptRevisionsOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> DataCollaborationManagementClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
