# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg):
    pass


# EXAMPLE: /Workspaces/put/Workspaces_CreateOrUpdate
@try_manual
def step__workspaces_put_workspaces_createorupdate(test, rg):
    test.cmd('az datacollaboration workspace create '
             '--resource-group "{rg}" '
             '--location "West US 2" '
             '--tags tag1="Red" tag2="White" '
             '--name "{Workspace1}"',
             checks=[])
    test.cmd('az datacollaboration workspace wait --created '
             '--resource-group "{rg}" '
             '--name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Proposals/put/Proposals_CreateOrUpdate
@try_manual
def step__proposals_put_proposals_createorupdate(test, rg):
    test.cmd('az datacollaboration proposal create '
             '--description "Proposal description" '
             '--terms "Proposal terms" '
             '--name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])
    test.cmd('az datacollaboration proposal wait --created '
             '--name "{Proposal1}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Entitlements/put/Entitlements_CreateOrUpdate
@try_manual
def step__entitlements_put_entitlements_createorupdate(test, rg):
    test.cmd('az datacollaboration entitlement create '
             '--description "Entitlement description" '
             '--resource-id "6fa17733-0c87-4671-bc4c-a6d9f1228948" '
             '--resource-type "DataAssetReference" '
             '--subject-id "a415f518-e721-4852-84de-8b139f92b933" '
             '--name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ConsumerInvitations/get/ConsumerInvitations_Get
@try_manual
def step__consumerinvitations_get_consumerinvitations_get(test, rg):
    test.cmd('az datacollaboration consumer-invitation show '
             '--invitation-id "dfbbc788-19eb-4607-a5a1-c74181bfff03" '
             '--location "East US 2"',
             checks=[])


# EXAMPLE: /ConsumerInvitations/get/ConsumerInvitations_ListInvitations
@try_manual
def step__consumerinvitations_get_consumerinvitations_listinvitations(test, rg):
    test.cmd('az datacollaboration consumer-invitation list-invitation',
             checks=[])


# EXAMPLE: /ConsumerInvitations/post/ConsumerInvitations_RejectInvitation
@try_manual
def step__consumerinvitations_post_consumerinvitations_rejectinvitation(test, rg):
    test.cmd('az datacollaboration consumer-invitation reject-invitation '
             '--invitation-id "dfbbc788-19eb-4607-a5a1-c74181bfff03" '
             '--location "East US 2"',
             checks=[])


# EXAMPLE: /Constraints/put/Constraints_CreateOrUpdate
@try_manual
def step__constraints_put_constraints_createorupdate(test, rg):
    test.cmd('az datacollaboration constraint create '
             '--script-constraint description="Constraint description" script-reference-id="6fa17733-0c87-4671-bc4c-a6d'
             '9f1228948" '
             '--name "{Constraint1}" '
             '--entitlement-name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Workspaces/get/Workspaces_Get
@try_manual
def step__workspaces_get_workspaces_get(test, rg):
    test.cmd('az datacollaboration workspace show '
             '--resource-group "{rg}" '
             '--name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Workspaces/get/Workspaces_ListByResourceGroup
@try_manual
def step__workspaces_get_workspaces_listbyresourcegroup(test, rg):
    test.cmd('az datacollaboration workspace list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Workspaces/get/Workspaces_ListBySubscription
@try_manual
def step__workspaces_get_workspaces_listbysubscription(test, rg):
    test.cmd('az datacollaboration workspace list '
             '-g ""',
             checks=[])


# EXAMPLE: /Workspaces/patch/Workspaces_Update
@try_manual
def step__workspaces_patch_workspaces_update(test, rg):
    test.cmd('az datacollaboration workspace update '
             '--resource-group "{rg}" '
             '--name "{Workspace1}" '
             '--tags tag1="Red" tag2="White"',
             checks=[])


# EXAMPLE: /DataAssetReferences/put/DataAssetReferences_CreateOrUpdate
@try_manual
def step__dataassetreferences_put_dataassetreferences_createorupdate(test, rg):
    test.cmd('az datacollaboration data-asset-reference create '
             '--description "Reference to DataAsset1" '
             '--data-asset-id "d164252e-2909-4718-a91e-315195c54b09" '
             '--proposal-name "{Proposal1}" '
             '--reference-name "DataAssetReference1" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssetReferences/get/DataAssetReferences_Get
@try_manual
def step__dataassetreferences_get_dataassetreferences_get(test, rg):
    test.cmd('az datacollaboration data-asset-reference show '
             '--proposal-name "{Proposal1}" '
             '--reference-name "DataAssetReference1" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssetReferences/get/DataAssetReferences_ListByProposal
@try_manual
def step__dataassetreferences_get_dataassetreferences_listbyproposal(test, rg):
    test.cmd('az datacollaboration data-asset-reference list '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssetReferences/post/DataAssetReferences_Resolve
@try_manual
def step__dataassetreferences_post_dataassetreferences_resolve(test, rg):
    test.cmd('az datacollaboration data-asset-reference resolve '
             '--proposal-name "{Proposal1}" '
             '--reference-name "DataAssetReference1" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssets/put/DataAssets_CreateOrUpdate
@try_manual
def step__dataassets_put_dataassets_createorupdate(test, rg):
    test.cmd('az datacollaboration data-asset create '
             '--description "Data of DataSet1" '
             '--data-processing-strategy "CopyBased" '
             '--name "{DataAsset1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssets/get/DataAssets_Get
@try_manual
def step__dataassets_get_dataassets_get(test, rg):
    test.cmd('az datacollaboration data-asset show '
             '--name "{DataAsset1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssets/get/DataAssets_ListByWorkspace
@try_manual
def step__dataassets_get_dataassets_listbyworkspace(test, rg):
    test.cmd('az datacollaboration data-asset list '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataSets/put/DataSets_CreateOrUpdate
@try_manual
def step__datasets_put_datasets_createorupdate(test, rg):
    test.cmd('az datacollaboration data-set create '
             '--data-asset-name "{DataAsset1}" '
             '--blob-data-set container-name="C1" file-path="file21" storage-account-id="subscriptions/12345678-1234-12'
             '34-1234-567890abcdef/resourceGroups/SampleResourceGroup/providers/Microsoft.Storage/storageAccounts/stora'
             'ge2" '
             '--data-set-category "Production" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataSets/get/DataSets_Get
@try_manual
def step__datasets_get_datasets_get(test, rg):
    test.cmd('az datacollaboration data-set show '
             '--data-asset-name "{DataAsset1}" '
             '--data-set-category "Production" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataSets/get/DataSets_ListByDataAsset
@try_manual
def step__datasets_get_datasets_listbydataasset(test, rg):
    test.cmd('az datacollaboration data-set list '
             '--data-asset-name "{DataAsset1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Constraints/get/Constraints_ListByEntitlement
@try_manual
def step__constraints_get_constraints_listbyentitlement(test, rg):
    test.cmd('az datacollaboration constraint list '
             '--entitlement-name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Entitlements/get/Entitlements_Get
@try_manual
def step__entitlements_get_entitlements_get(test, rg):
    test.cmd('az datacollaboration entitlement show '
             '--name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Entitlements/get/Entitlements_ListByProposal
@try_manual
def step__entitlements_get_entitlements_listbyproposal(test, rg):
    test.cmd('az datacollaboration entitlement list '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Invitations/put/Invitations_Create
@try_manual
def step__invitations_put_invitations_create(test, rg):
    test.cmd('az datacollaboration invitation create '
             '--target-email "receiver@microsoft.com" '
             '--name "{Invitation1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Invitations/get/Invitations_Get
@try_manual
def step__invitations_get_invitations_get(test, rg):
    test.cmd('az datacollaboration invitation show '
             '--name "{Invitation1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Invitations/get/Invitations_ListByProposal
@try_manual
def step__invitations_get_invitations_listbyproposal(test, rg):
    test.cmd('az datacollaboration invitation list '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Participants/get/Participants_Get
@try_manual
def step__participants_get_participants_get(test, rg):
    test.cmd('az datacollaboration participant show '
             '--name "{Participant1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Participants/get/Participants_ListByProposal
@try_manual
def step__participants_get_participants_listbyproposal(test, rg):
    test.cmd('az datacollaboration participant list '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Pipelines/put/Pipelines_CreateOrUpdate
@try_manual
def step__pipelines_put_pipelines_createorupdate(test, rg):
    test.cmd('az datacollaboration pipeline create '
             '--description "A pipeline" '
             '--name "{Pipeline1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Pipelines/get/Pipelines_Get
@try_manual
def step__pipelines_get_pipelines_get(test, rg):
    test.cmd('az datacollaboration pipeline show '
             '--name "{Pipeline1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Pipelines/get/Pipelines_ListByWorkspace
@try_manual
def step__pipelines_get_pipelines_listbyworkspace(test, rg):
    test.cmd('az datacollaboration pipeline list '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Pipelines/post/Pipelines_Run
@try_manual
def step__pipelines_post_pipelines_run(test, rg):
    test.cmd('az datacollaboration pipeline run '
             '--name "{Pipeline1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineRuns/get/PipelineRuns_Get
@try_manual
def step__pipelineruns_get_pipelineruns_get(test, rg):
    test.cmd('az datacollaboration pipeline-run show '
             '--pipeline-name "{Pipeline1}" '
             '--name "{PipelineRun1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineRuns/get/PipelineRuns_ListByPipeline
@try_manual
def step__pipelineruns_get_pipelineruns_listbypipeline(test, rg):
    test.cmd('az datacollaboration pipeline-run list '
             '--pipeline-name "{Pipeline1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineRuns/post/PipelineRuns_Cancel
@try_manual
def step__pipelineruns_post_pipelineruns_cancel(test, rg):
    test.cmd('az datacollaboration pipeline-run cancel '
             '--pipeline-name "{Pipeline1}" '
             '--name "{PipelineRun1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineStepRuns/get/PipelineStepRuns_Get
@try_manual
def step__pipelinestepruns_get_pipelinestepruns_get(test, rg):
    test.cmd('az datacollaboration pipeline-step-run show '
             '--pipeline-name "{Pipeline1}" '
             '--pipeline-run-name "{PipelineRun1}" '
             '--pipeline-step-run-id "5ec0dd18-ea32-4d27-b3a5-2920c5f26325" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineStepRuns/get/PipelineStepRuns_ListByPipelineRun
@try_manual
def step__pipelinestepruns_get_pipelinestepruns_listbypipelinerun(test, rg):
    test.cmd('az datacollaboration pipeline-step-run list '
             '--pipeline-name "{Pipeline1}" '
             '--pipeline-run-name "{PipelineRun1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineSteps/put/PipelineSteps_CreateOrUpdate
@try_manual
def step__pipelinesteps_put_pipelinesteps_createorupdate(test, rg):
    test.cmd('az datacollaboration pipeline-step create '
             '--pipeline-name "{Pipeline1}" '
             '--synapse-spark-pipeline-step cluster-size=2 dependencies="PipelineStep0" script-id="284878c1-deb7-440a-9'
             'f87-28b6e58242a3" script-revision=1 script-sink-bindings={{"dataAssetId":"2f5a9076-3372-4282-b52d-a382382'
             '930ee","key":"sink1"}} script-sink-bindings={{"dataAssetId":"30ba4508-b74f-46b0-bc30-1d891cd19ba1","key":'
             '"sink2"}} script-source-bindings={{"dataAssetId":"093a76ba-a0f2-4a03-80b1-bec1d3368711","key":"source1"}}'
             ' script-source-bindings={{"dataAssetId":"2aa367d4-839c-468c-95b9-f3e63c628111","key":"source2"}} '
             '--name "{PipelineStep1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineSteps/put/PipelineSteps_SynapseSpark_CreateOrUpdate
@try_manual
def step__pipelinesteps_put_pipelinesteps_synapsespark_createorupdate(test, rg):
    test.cmd('az datacollaboration pipeline-step create '
             '--pipeline-name "{Pipeline1}" '
             '--synapse-spark-pipeline-step cluster-size=2 dependencies="PipelineStep0" script-id="284878c1-deb7-440a-9'
             'f87-28b6e58242a3" script-revision=1 script-sink-bindings={{"dataAssetId":"2f5a9076-3372-4282-b52d-a382382'
             '930ee","key":"sink1"}} script-sink-bindings={{"dataAssetId":"30ba4508-b74f-46b0-bc30-1d891cd19ba1","key":'
             '"sink2"}} script-source-bindings={{"dataAssetId":"093a76ba-a0f2-4a03-80b1-bec1d3368711","key":"source1"}}'
             ' script-source-bindings={{"dataAssetId":"2aa367d4-839c-468c-95b9-f3e63c628111","key":"source2"}} '
             '--name "{PipelineStep1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineSteps/get/PipelineSteps_Get
@try_manual
def step__pipelinesteps_get_pipelinesteps_get(test, rg):
    test.cmd('az datacollaboration pipeline-step show '
             '--pipeline-name "{Pipeline1}" '
             '--name "{PipelineStep1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineSteps/get/PipelineSteps_ListByPipeline
@try_manual
def step__pipelinesteps_get_pipelinesteps_listbypipeline(test, rg):
    test.cmd('az datacollaboration pipeline-step list '
             '--pipeline-name "{Pipeline1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Constraints/get/Constraints_Get
@try_manual
def step__constraints_get_constraints_get(test, rg):
    test.cmd('az datacollaboration constraint show '
             '--name "{Constraint1}" '
             '--entitlement-name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Proposals/get/Proposals_Get
@try_manual
def step__proposals_get_proposals_get(test, rg):
    test.cmd('az datacollaboration proposal show '
             '--name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Proposals/get/Proposals_ListByWorkspace
@try_manual
def step__proposals_get_proposals_listbyworkspace(test, rg):
    test.cmd('az datacollaboration proposal list '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Proposals/post/Proposals_Revoke
@try_manual
def step__proposals_post_proposals_revoke(test, rg):
    test.cmd('az datacollaboration proposal revoke '
             '--name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Proposals/post/Proposals_Sign
@try_manual
def step__proposals_post_proposals_sign(test, rg):
    test.cmd('az datacollaboration proposal sign '
             '--name "{Proposal1}" '
             '--proposal-version "ae660cb9-0c0c-4ff5-a68f-dc5584a63c79" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Policies/put/Policies_CreateOrUpdate
@try_manual
def step__policies_put_policies_createorupdate(test, rg):
    test.cmd('az datacollaboration policy create '
             '--entitlement-name "{Entitlement1}" '
             '--diagnostic-policy description="Policy description" log-level="Information" '
             '--name "{Policy1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Policies/get/Policies_Get
@try_manual
def step__policies_get_policies_get(test, rg):
    test.cmd('az datacollaboration policy show '
             '--entitlement-name "{Entitlement1}" '
             '--name "{Policy1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Policies/get/Policies_ListByEntitlement
@try_manual
def step__policies_get_policies_listbyentitlement(test, rg):
    test.cmd('az datacollaboration policy list '
             '--entitlement-name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ScriptReferences/put/ScriptReferences_CreateOrUpdate
@try_manual
def step__scriptreferences_put_scriptreferences_createorupdate(test, rg):
    test.cmd('az datacollaboration script-reference create '
             '--proposal-name "{Proposal1}" '
             '--reference-name "ScriptReference1" '
             '--resource-group "{rg}" '
             '--revision 1 '
             '--script-id "d164252e-2909-4718-a91e-315195c54b09" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ScriptReferences/get/ScriptReferences_Get
@try_manual
def step__scriptreferences_get_scriptreferences_get(test, rg):
    test.cmd('az datacollaboration script-reference show '
             '--proposal-name "{Proposal1}" '
             '--reference-name "ScriptReference1" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ScriptReferences/get/ScriptReferences_ListByProposal
@try_manual
def step__scriptreferences_get_scriptreferences_listbyproposal(test, rg):
    test.cmd('az datacollaboration script-reference list '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ScriptReferences/post/ScriptReferences_Resolve
@try_manual
def step__scriptreferences_post_scriptreferences_resolve(test, rg):
    test.cmd('az datacollaboration script-reference resolve '
             '--proposal-name "{Proposal1}" '
             '--reference-name "ScriptReference1" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Constraints/delete/Constraints_Delete
@try_manual
def step__constraints_delete_constraints_delete(test, rg):
    test.cmd('az datacollaboration constraint delete '
             '--name "{Constraint1}" '
             '--entitlement-name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Scripts/put/Scripts_CreateOrUpdate
@try_manual
def step__scripts_put_scripts_createorupdate(test, rg):
    test.cmd('az datacollaboration script create '
             '--resource-group "{rg}" '
             '--synapse-spark-script content="Hello Python!" language="Python" sinks="bar" sources="foo" visibility="Sh'
             'owAll" '
             '--name "{Script1}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Scripts/put/Scripts_SynapseSpark_CreateOrUpdate
@try_manual
def step__scripts_put_scripts_synapsespark_createorupdate(test, rg):
    test.cmd('az datacollaboration script create '
             '--resource-group "{rg}" '
             '--synapse-spark-script content="Hello Python!" language="Python" sinks="bar" sources="foo" visibility="Sh'
             'owAll" '
             '--name "{Script1}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Scripts/get/Scripts_Get
@try_manual
def step__scripts_get_scripts_get(test, rg):
    test.cmd('az datacollaboration script show '
             '--resource-group "{rg}" '
             '--name "{Script1}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Scripts/get/Scripts_ListByWorkspace
@try_manual
def step__scripts_get_scripts_listbyworkspace(test, rg):
    test.cmd('az datacollaboration script list '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ScriptRevisions/get/ScriptRevisions_Get
@try_manual
def step__scriptrevisions_get_scriptrevisions_get(test, rg):
    test.cmd('az datacollaboration script-revision show '
             '--resource-group "{rg}" '
             '--revision 1 '
             '--script-name "{Script1}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ScriptRevisions/get/ScriptRevisions_ListByScript
@try_manual
def step__scriptrevisions_get_scriptrevisions_listbyscript(test, rg):
    test.cmd('az datacollaboration script-revision list '
             '--resource-group "{rg}" '
             '--script-name "{Script1}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssetReferences/delete/DataAssetReferences_Delete
@try_manual
def step__dataassetreferences_delete_dataassetreferences_delete(test, rg):
    test.cmd('az datacollaboration data-asset-reference delete '
             '--proposal-name "{Proposal1}" '
             '--reference-name "DataAssetReference1" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Policies/delete/Policies_Delete
@try_manual
def step__policies_delete_policies_delete(test, rg):
    test.cmd('az datacollaboration policy delete '
             '--entitlement-name "{Entitlement1}" '
             '--name "{Policy1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataSets/delete/DataSets_Delete
@try_manual
def step__datasets_delete_datasets_delete(test, rg):
    test.cmd('az datacollaboration data-set delete '
             '--data-asset-name "{DataAsset1}" '
             '--data-set-category "Production" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /DataAssets/delete/DataAssets_Delete
@try_manual
def step__dataassets_delete_dataassets_delete(test, rg):
    test.cmd('az datacollaboration data-asset delete '
             '--name "{DataAsset1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Invitations/delete/Invitations_Delete
@try_manual
def step__invitations_delete_invitations_delete(test, rg):
    test.cmd('az datacollaboration invitation delete '
             '--name "{Invitation1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Entitlements/delete/Entitlements_Delete
@try_manual
def step__entitlements_delete_entitlements_delete(test, rg):
    test.cmd('az datacollaboration entitlement delete '
             '--name "{Entitlement1}" '
             '--proposal-name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /PipelineSteps/delete/PipelineSteps_Delete
@try_manual
def step__pipelinesteps_delete_pipelinesteps_delete(test, rg):
    test.cmd('az datacollaboration pipeline-step delete '
             '--pipeline-name "{Pipeline1}" '
             '--name "{PipelineStep1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Pipelines/delete/Pipelines_Delete
@try_manual
def step__pipelines_delete_pipelines_delete(test, rg):
    test.cmd('az datacollaboration pipeline delete '
             '--name "{Pipeline1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /ScriptReferences/delete/ScriptReferences_Delete
@try_manual
def step__scriptreferences_delete_scriptreferences_delete(test, rg):
    test.cmd('az datacollaboration script-reference delete '
             '--proposal-name "{Proposal1}" '
             '--reference-name "ScriptReference1" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Proposals/delete/Proposals_Delete
@try_manual
def step__proposals_delete_proposals_delete(test, rg):
    test.cmd('az datacollaboration proposal delete '
             '--name "{Proposal1}" '
             '--resource-group "{rg}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Scripts/delete/Scripts_Delete
@try_manual
def step__scripts_delete_scripts_delete(test, rg):
    test.cmd('az datacollaboration script delete '
             '--resource-group "{rg}" '
             '--name "{Script1}" '
             '--workspace-name "{Workspace1}"',
             checks=[])


# EXAMPLE: /Workspaces/delete/Workspaces_Delete
@try_manual
def step__workspaces_delete_workspaces_delete(test, rg):
    test.cmd('az datacollaboration workspace delete '
             '--resource-group "{rg}" '
             '--name "{Workspace1}"',
             checks=[])


@try_manual
def cleanup(test, rg):
    pass


@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__workspaces_put_workspaces_createorupdate(test, rg)
    step__proposals_put_proposals_createorupdate(test, rg)
    step__entitlements_put_entitlements_createorupdate(test, rg)
    step__consumerinvitations_get_consumerinvitations_get(test, rg)
    step__consumerinvitations_get_consumerinvitations_listinvitations(test, rg)
    step__consumerinvitations_post_consumerinvitations_rejectinvitation(test, rg)
    step__constraints_put_constraints_createorupdate(test, rg)
    step__workspaces_get_workspaces_get(test, rg)
    step__workspaces_get_workspaces_listbyresourcegroup(test, rg)
    step__workspaces_get_workspaces_listbysubscription(test, rg)
    step__workspaces_patch_workspaces_update(test, rg)
    step__dataassetreferences_put_dataassetreferences_createorupdate(test, rg)
    step__dataassetreferences_get_dataassetreferences_get(test, rg)
    step__dataassetreferences_get_dataassetreferences_listbyproposal(test, rg)
    step__dataassetreferences_post_dataassetreferences_resolve(test, rg)
    step__dataassets_put_dataassets_createorupdate(test, rg)
    step__dataassets_get_dataassets_get(test, rg)
    step__dataassets_get_dataassets_listbyworkspace(test, rg)
    step__datasets_put_datasets_createorupdate(test, rg)
    step__datasets_get_datasets_get(test, rg)
    step__datasets_get_datasets_listbydataasset(test, rg)
    step__constraints_get_constraints_listbyentitlement(test, rg)
    step__entitlements_get_entitlements_get(test, rg)
    step__entitlements_get_entitlements_listbyproposal(test, rg)
    step__invitations_put_invitations_create(test, rg)
    step__invitations_get_invitations_get(test, rg)
    step__invitations_get_invitations_listbyproposal(test, rg)
    step__participants_get_participants_get(test, rg)
    step__participants_get_participants_listbyproposal(test, rg)
    step__pipelines_put_pipelines_createorupdate(test, rg)
    step__pipelines_get_pipelines_get(test, rg)
    step__pipelines_get_pipelines_listbyworkspace(test, rg)
    step__pipelines_post_pipelines_run(test, rg)
    step__pipelineruns_get_pipelineruns_get(test, rg)
    step__pipelineruns_get_pipelineruns_listbypipeline(test, rg)
    step__pipelineruns_post_pipelineruns_cancel(test, rg)
    step__pipelinestepruns_get_pipelinestepruns_get(test, rg)
    step__pipelinestepruns_get_pipelinestepruns_listbypipelinerun(test, rg)
    step__pipelinesteps_put_pipelinesteps_createorupdate(test, rg)
    step__pipelinesteps_put_pipelinesteps_synapsespark_createorupdate(test, rg)
    step__pipelinesteps_get_pipelinesteps_get(test, rg)
    step__pipelinesteps_get_pipelinesteps_listbypipeline(test, rg)
    step__constraints_get_constraints_get(test, rg)
    step__proposals_get_proposals_get(test, rg)
    step__proposals_get_proposals_listbyworkspace(test, rg)
    step__proposals_post_proposals_revoke(test, rg)
    step__proposals_post_proposals_sign(test, rg)
    step__policies_put_policies_createorupdate(test, rg)
    step__policies_get_policies_get(test, rg)
    step__policies_get_policies_listbyentitlement(test, rg)
    step__scriptreferences_put_scriptreferences_createorupdate(test, rg)
    step__scriptreferences_get_scriptreferences_get(test, rg)
    step__scriptreferences_get_scriptreferences_listbyproposal(test, rg)
    step__scriptreferences_post_scriptreferences_resolve(test, rg)
    step__constraints_delete_constraints_delete(test, rg)
    step__scripts_put_scripts_createorupdate(test, rg)
    step__scripts_put_scripts_synapsespark_createorupdate(test, rg)
    step__scripts_get_scripts_get(test, rg)
    step__scripts_get_scripts_listbyworkspace(test, rg)
    step__scriptrevisions_get_scriptrevisions_get(test, rg)
    step__scriptrevisions_get_scriptrevisions_listbyscript(test, rg)
    step__dataassetreferences_delete_dataassetreferences_delete(test, rg)
    step__policies_delete_policies_delete(test, rg)
    step__datasets_delete_datasets_delete(test, rg)
    step__dataassets_delete_dataassets_delete(test, rg)
    step__invitations_delete_invitations_delete(test, rg)
    step__entitlements_delete_entitlements_delete(test, rg)
    step__pipelinesteps_delete_pipelinesteps_delete(test, rg)
    step__pipelines_delete_pipelines_delete(test, rg)
    step__scriptreferences_delete_scriptreferences_delete(test, rg)
    step__proposals_delete_proposals_delete(test, rg)
    step__scripts_delete_scripts_delete(test, rg)
    step__workspaces_delete_workspaces_delete(test, rg)
    cleanup(test, rg)


@try_manual
class DataCollaborationManagementClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestdatacollaboration_SampleResourceGroup'[:7], key='rg', parameter_name='rg'
                           '')
    def test_datacollaboration(self, rg):

        self.kwargs.update({
            'Workspace1': 'Workspace1',
            'DataAsset1': 'DataAsset1',
            'Pipeline1': 'Pipeline1',
            'PipelineRun1': 'PipelineRun1',
            'PipelineStep1': 'PipelineStep1',
            'Proposal1': 'Proposal1',
            'Entitlement1': 'Entitlement1',
            'Constraint1': 'Constraint1',
            'Policy1': 'Policy1',
            'Invitation1': 'Invitation1',
            'Participant1': 'Participant1',
            'Script1': 'Script1',
        })

        call_scenario(self, rg)
        raise_if()
