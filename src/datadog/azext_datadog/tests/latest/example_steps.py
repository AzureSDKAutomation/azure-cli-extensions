# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /MarketplaceAgreements/put/MarketplaceAgreements_Create
@try_manual
def step_marketplace_agreement_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog marketplace-agreement create '
             '--properties accepted=true',
             checks=checks)


# EXAMPLE: /Monitors/put/Monitors_Create
@try_manual
def step_monitor_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog monitor create '
             '--monitor-name "{myMonitor}" '
             '--name "{myMonitor}" '
             '--location "West US" '
             '--datadog-organization-properties name="myOrg" enterprise-app-id="00000000-0000-0000-0000-000000000000" '
             'linking-auth-code="someAuthCode" linking-client-id="00000000-0000-0000-0000-000000000000" '
             'subscription="pro" '
             '--user-info name="Alice" email-address="alice@microsoft.com" phone-number="123-456-7890" '
             '--name "free_Monthly" '
             '--tags Environment="Dev" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az datadog monitor wait --created '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Monitors/get/Monitors_Get
@try_manual
def step_monitor_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog monitor show '
             '--name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Monitors/get/Monitors_List
@try_manual
def step_monitor_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog monitor list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Monitors/get/Monitors_ListByResourceGroup
@try_manual
def step_monitor_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog monitor list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Monitors/patch/Monitors_Update
@try_manual
def step_monitor_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog monitor update '
             '--name "{myMonitor}" '
             '--tags Environment="Dev" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApiKeys/post/ApiKeys_GetDefaultKey
@try_manual
def step_api_key_get_default_key(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog api-key get-default-key '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApiKeys/post/ApiKeys_List
@try_manual
def step_api_key_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog api-key list '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApiKeys/post/ApiKeys_SetDefaultKey
@try_manual
def step_api_key_set_default_key(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog api-key set-default-key '
             '--monitor-name "{myMonitor}" '
             '--key "1111111111111111aaaaaaaaaaaaaaaa" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Hosts/post/Hosts_List
@try_manual
def step_host_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog host list '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LinkedResources/post/LinkedResources_List
@try_manual
def step_linked_resource_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog linked-resource list '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /MarketplaceAgreements/get/MarketplaceAgreements_List
@try_manual
def step_marketplace_agreement_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog marketplace-agreement list',
             checks=checks)


# EXAMPLE: /MonitoredResources/post/MonitoredResources_List
@try_manual
def step_monitored_resource_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog monitored-resource list '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /RefreshSetPassword/post/RefreshSetPassword_Get
@try_manual
def step_set_password_link_get(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog set-password-link get '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /SingleSignOnConfigurations/put/SingleSignOnConfigurations_CreateOrUpdate
@try_manual
def step_sso_config_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog sso-config create '
             '--configuration-name "default" '
             '--monitor-name "{myMonitor}" '
             '--properties enterprise-app-id="00000000-0000-0000-0000-000000000000" single-sign-on-state="Enable" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /SingleSignOnConfigurations/get/SingleSignOnConfigurations_Get
@try_manual
def step_sso_config_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog sso-config show '
             '--configuration-name "default" '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /SingleSignOnConfigurations/get/SingleSignOnConfigurations_List
@try_manual
def step_sso_config_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog sso-config list '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /TagRules/put/TagRules_CreateOrUpdate
@try_manual
def step_tag_rule_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog tag-rule create '
             '--monitor-name "{myMonitor}" '
             '--log-rules-filtering-tags name="Environment" action="Include" value="Prod" '
             '--log-rules-filtering-tags name="Environment" action="Exclude" value="Dev" '
             '--send-aad-logs false '
             '--send-resource-logs true '
             '--send-subscription-logs true '
             '--resource-group "{rg}" '
             '--rule-set-name "default"',
             checks=checks)


# EXAMPLE: /TagRules/get/TagRules_Get
@try_manual
def step_tag_rule_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog tag-rule show '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}" '
             '--rule-set-name "default"',
             checks=checks)


# EXAMPLE: /TagRules/get/TagRules_List
@try_manual
def step_tag_rule_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog tag-rule list '
             '--monitor-name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Monitors/delete/Monitors_Delete
@try_manual
def step_monitor_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datadog monitor delete -y '
             '--name "{myMonitor}" '
             '--resource-group "{rg}"',
             checks=checks)

